{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","protoTypes","PropTypes","func","isRequired","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","e","preventDefault","newProject","nextProps","setState","defineProperty","target","name","value","classnames","is-invalid","placeholder","initialState","intitialState","project_tasks","project_taks","combineReducers","length","undefined","action","objectSpread","filter","backlog","project_task","projectSequence","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pTSequence","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","Axios","_x5","Backlog","project_tasks_prop","console","log","tasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","error","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","PTSequence","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","prop","Register","username","password","confirmPasswd","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","SecuredRoute","component","otherProps","objectWithoutProperties","react_router","assign","render","proprTypes","object","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dc985c6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nProjectItem.protoTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  {\n    deleteProject\n  }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    console.log(newUser);\r\n    await axios.post(\"api/users/register\", newUser);\r\n\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    const { token } = res.data;\r\n\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\"> Create Project form </h5>{\" \"}\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />{\" \"}\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>{\" \"}\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />{\" \"}\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>{\" \"}\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />{\" \"}\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>{\" \"}\n                  <h6> Start Date </h6>{\" \"}\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />{\" \"}\n                  </div>{\" \"}\n                  <h6> Estimated End Date </h6>{\" \"}\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />{\" \"}\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    createProject\n  }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst intitialState = {\n  project_tasks: [],\n  project_taks: {}\n};\n\nexport default function(state = intitialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"../reducers/securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">\n                      {\" \"}\n                      {errors.projectName}{\" \"}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">\n                      {\" \"}\n                      {errors.description}{\" \"}\n                    </div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pTSequence) {\n    this.props.deleteProjectTask(backlog_id, pTSequence);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","//import axion from \"axios\";\nimport Axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await Axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: { error: \"Not Found\" }\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  projectSequence,\n  history\n) => async dispatch => {\n  try {\n    const res = await Axios.get(\n      `/api/backlog/${backlog_id}/${projectSequence}`\n    );\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pTSequence,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await Axios.patch(`/api/backlog/${backlog_id}/${pTSequence}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pTSequence) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pTSequence}, this action cannot be undone`\n    )\n  ) {\n    await Axios.delete(`/api/backlog/${backlog_id}/${pTSequence}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pTSequence\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    console.log();\n\n    var tasks = [];\n\n    if (typeof project_tasks_prop !== \"string\") {\n      tasks = project_tasks_prop.map(project_task => (\n        <ProjectTask key={project_task.id} project_task={project_task} />\n      ));\n    }\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n  <div className=\"card mb-1 bg-light\">\n              <div className=\"card-header text-primary\">\n                ID: projectSequence -- Priority: priorityString\n              </div>\n              <div className=\"card-body bg-light\">\n                <h5 className=\"card-title\">project_task.summary</h5>\n                <p className=\"card-text text-truncate \">\n                  project_task.acceptanceCriteria\n                </p>\n                <Link to=\"\" className=\"btn btn-primary\">\n                  View / Update\n                </Link>\n\n                <button className=\"btn btn-danger ml-4\">Delete</button>\n              </div>\n            </div>\n  */\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./ProjectBoard/Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\"> {errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../../src/actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectIdentifier: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      created_At: \"\",\n      priority: \"\",\n      status: \"\",\n      dueDate: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, PTSequence } = this.props.match.params;\n\n    this.props.getProjectTask(backlog_id, PTSequence, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectIdentifier,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      created_At,\n      priority,\n      status,\n      dueDate\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectIdentifier,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      created_At,\n      priority,\n      status,\n      dueDate\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectIdentifier: this.state.projectIdentifier,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      created_At: this.state.created_At,\n      priority: this.state.priority,\n      status: this.state.status,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.prop.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPasswd: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.prop.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPasswd: this.state.confirmPasswd\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPasswd\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPasswd\"\r\n                    value={this.state.confirmPasswd}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPasswd && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPasswd}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.prop.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.proprTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"../src/actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            <Route exact path=\"/\" component={Landing} />\n\n            <Route exact path=\"/login\" component={Login} />\n\n            <Route exact path=\"/register\" component={Register} />\n\n            <Switch>\n              <SecuredRoute path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:PTSequence\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}