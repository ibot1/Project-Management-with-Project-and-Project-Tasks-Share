{"ast":null,"code":"import _regeneratorRuntime from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axion from \"axios\";\nimport Axios from \"axios\";\nimport { GET_PROJECT_TASK } from \"./types\";\nexport var addProjectTask = function addProjectTask(backlog_id, project_task, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Axios.post(\"/api/backlog/\".concat(backlog_id), project_task);\n\n              case 3:\n                history.push(\"/projectBoard/\".concat(backlog_id));\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: {}\n                });\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["S:\\Spring Boot\\PPMToolFullStack - Home\\pptool-react-client_\\pptool-react-client\\src\\actions\\backlogActions.js"],"names":["axion","Axios","GET_PROJECT_TASK","addProjectTask","backlog_id","project_task","history","dispatch","post","push","type","GET_ERRORS","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAC5BC,UAD4B,EAE5BC,YAF4B,EAG5BC,OAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAIzB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEKN,KAAK,CAACO,IAAN,wBAA2BJ,UAA3B,GAAyCC,YAAzC,CAFL;;AAAA;AAGDC,gBAAAA,OAAO,CAACG,IAAR,yBAA8BL,UAA9B;AACAG,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEC,UADC;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;AAJC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import axion from \"axios\";\r\nimport Axios from \"axios\";\r\nimport { GET_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await Axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}