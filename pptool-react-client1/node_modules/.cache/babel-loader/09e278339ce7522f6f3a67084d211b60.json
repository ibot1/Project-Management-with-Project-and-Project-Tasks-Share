{"ast":null,"code":"import _defineProperty from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\src\\\\components\\\\ProjectBoard\\\\Backlog.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nvar Container = styled.div(_templateObject());\n\nvar Backlog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Backlog, _Component);\n\n  function Backlog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Backlog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Backlog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _this.props;\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId; //origin, source, item to move were intialized by onDragEnd's prop\n      //return if not destination\n\n      if (!destination) {\n        return;\n      } //return if the item isn't moved\n\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      var start = _this.state.columns[source.droppableId]; //from column\n\n      var finish = _this.state.columns[destination.droppableId]; //to column\n\n      if (start === finish) {\n        var newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        var newColumn = _objectSpread({}, start, {\n          taskIds: newTaskIds\n        });\n\n        var _newState = _objectSpread({}, _this.state, {\n          columns: _objectSpread({}, _this.state.columns, _defineProperty({}, newColumn.id, newColumn))\n        });\n\n        _this.setState(_newState);\n\n        return;\n      } // Moving from one list to another\n\n\n      var startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n\n      var newStart = _objectSpread({}, start, {\n        taskIds: startTaskIds\n      });\n\n      var finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n\n      var newFinish = _objectSpread({}, finish, {\n        taskIds: finishTaskIds\n      });\n\n      var newState = _objectSpread({}, _this.state, {\n        columns: _objectSpread({}, _this.state.columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newStart.id, newStart), _defineProperty(_objectSpread3, newFinish.id, newFinish), _objectSpread3))\n      });\n\n      _this.setState(newState);\n    };\n\n    return _this;\n  }\n\n  _createClass(Backlog, [{\n    key: \"render\",\n    value: function render() {\n      var project_tasks_prop = this.props.project_tasks_prop;\n      console.log();\n      var tasks = [];\n\n      if (typeof project_tasks_prop !== \"string\") {\n        tasks = project_tasks_prop.map(function (project_task) {\n          return React.createElement(ProjectTask, {\n            key: project_task.id,\n            project_task: project_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          });\n        });\n      }\n\n      var todoItems = [];\n      var inProgressItems = [];\n      var doneItems = [];\n\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i].props.project_task.status === \"TO_DO\") {\n          todoItems.push(tasks[i]);\n        }\n\n        if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n          inProgressItems.push(tasks[i]);\n        }\n\n        if (tasks[i].props.project_task.status === \"DONE\") {\n          doneItems.push(tasks[i]);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-secondary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"TO DO\"))), React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, todoItems))), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"In Progress\"))), inProgressItems), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-success text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Done\"))), doneItems)));\n    }\n  }]);\n\n  return Backlog;\n}(Component);\n/*\n  <div className=\"card mb-1 bg-light\">\n              <div className=\"card-header text-primary\">\n                ID: projectSequence -- Priority: priorityString\n              </div>\n              <div className=\"card-body bg-light\">\n                <h5 className=\"card-title\">project_task.summary</h5>\n                <p className=\"card-text text-truncate \">\n                  project_task.acceptanceCriteria\n                </p>\n                <Link to=\"\" className=\"btn btn-primary\">\n                  View / Update\n                </Link>\n\n                <button className=\"btn btn-danger ml-4\">Delete</button>\n              </div>\n            </div>\n  */\n\n\nexport default Backlog;","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\components\\ProjectBoard\\Backlog.js"],"names":["React","Component","Link","ProjectTask","DragDropContext","styled","Container","div","Backlog","state","props","onDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","setState","startTaskIds","newStart","finishTaskIds","newFinish","project_tasks_prop","console","log","tasks","map","project_task","todoItems","inProgressItems","doneItems","i","length","status","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nclass Backlog extends Component {\n  state = this.props;\n\n  //\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result; //origin, source, item to move were intialized by onDragEnd's prop\n\n    //return if not destination\n    if (!destination) {\n      return;\n    }\n\n    //return if the item isn't moved\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId]; //from column\n    const finish = this.state.columns[destination.droppableId]; //to column\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    // Moving from one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    };\n    this.setState(newState);\n  };\n\n  render() {\n    const { project_tasks_prop } = this.props;\n    console.log();\n\n    var tasks = [];\n\n    if (typeof project_tasks_prop !== \"string\") {\n      tasks = project_tasks_prop.map(project_task => (\n        <ProjectTask key={project_task.id} project_task={project_task} />\n      ));\n    }\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <Container>{todoItems}</Container>\n            </DragDropContext>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n  <div className=\"card mb-1 bg-light\">\n              <div className=\"card-header text-primary\">\n                ID: projectSequence -- Priority: priorityString\n              </div>\n              <div className=\"card-body bg-light\">\n                <h5 className=\"card-title\">project_task.summary</h5>\n                <p className=\"card-text text-truncate \">\n                  project_task.acceptanceCriteria\n                </p>\n                <Link to=\"\" className=\"btn btn-primary\">\n                  View / Update\n                </Link>\n\n                <button className=\"btn btn-danger ml-4\">Delete</button>\n              </div>\n            </div>\n  */\n\nexport default Backlog;\n"]},"metadata":{},"sourceType":"module"}