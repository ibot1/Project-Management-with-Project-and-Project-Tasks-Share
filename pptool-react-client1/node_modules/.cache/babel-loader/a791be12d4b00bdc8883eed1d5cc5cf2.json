{"ast":null,"code":"import _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nvar str = sessionStorage.getItem(\"Authorization\");\nstr = str.substring(7, str.length);\nconsole.log(\"Authorization-token created: \" + str);\nvar maxInactive = 10; //10 minutes\n\nvar sessionStart = new Date().getTime() / 1000; //session start-time in seconds\n\nvar sessionActive = sessionStart;\nvar checkTime = 1000; //1-second\n\nfunction postToken() {\n  var xhttp = new XMLHttpRequest();\n\n  xhttp.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      document.getElementById(\"demo\").innerHTML = this.responseText;\n    }\n  };\n\n  xhttp.open(\"GET\", \"localhost:8090/api/users/token/\" + str, true);\n  xhttp.send();\n  console.log(xhttp.responseText);\n}\n\nfunction detectEvents() {\n  var arr = [\"drag\", \"wheel\", \"select\", \"click\", \"auxclick\", \"mousemove\", \"mousedown\", \"mouseup\", \"keydown\", \"keyup\", \"keypress\", \"cut\", \"copy\", \"paste\", \"scroll\", \"compositionupdate\", \"compositionend\", \"compositionstart\", \"submit\"];\n\n  for (var i = 0; i < arr.length; i++) {\n    document.addEventListener(arr[i], resetSessionStartAndActive);\n    deleteSessionKey();\n  }\n}\n\nfunction resetSessionStartAndActive() {\n  sessionStart = new Date().getTime() / 1000;\n  sessionActive = sessionStart;\n  console.log(\"refreshed\");\n}\n\nfunction checkActivity() {\n  if (sessionActive - sessionStart >= maxInactive) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction deleteSessionKey() {\n  var chk = checkActivity();\n\n  if (chk === true) {\n    sessionStorage.removeItem(\"Authorization\");\n    console.log(\"Removed the Authorization-token\"); //redirect the page\n  } else {\n    sessionActive = new Date().getTime() / 1000;\n    console.log(sessionActive + \" \" + sessionStart);\n  }\n}\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var projects = this.props.project.projects;\n      return React.createElement(\"div\", {\n        className: \"projects\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Projects\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(CreateProjectButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), projects.map(function (project) {\n        return React.createElement(ProjectItem, {\n          key: project.id,\n          project: project,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    project: state.project\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProjects: getProjects\n})(Dashboard);","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client1\\src\\components\\Dashboard.js"],"names":["React","Component","ProjectItem","CreateProjectButton","connect","getProjects","PropTypes","str","sessionStorage","getItem","substring","length","console","log","maxInactive","sessionStart","Date","getTime","sessionActive","checkTime","postToken","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","document","getElementById","innerHTML","responseText","open","send","detectEvents","arr","i","addEventListener","resetSessionStartAndActive","deleteSessionKey","checkActivity","chk","removeItem","Dashboard","props","projects","project","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nvar str = sessionStorage.getItem(\"Authorization\");\nstr = str.substring(7, str.length);\nconsole.log(\"Authorization-token created: \" + str);\nconst maxInactive = 10; //10 minutes\nvar sessionStart = new Date().getTime() / 1000; //session start-time in seconds\nvar sessionActive = sessionStart;\nconst checkTime = 1000; //1-second\n\nfunction postToken() {\n  var xhttp = new XMLHttpRequest();\n  xhttp.onreadystatechange = function() {\n    if (this.readyState == 4 && this.status == 200) {\n      document.getElementById(\"demo\").innerHTML = this.responseText;\n    }\n  };\n  xhttp.open(\"GET\", \"localhost:8090/api/users/token/\" + str, true);\n  xhttp.send();\n\n  console.log(xhttp.responseText);\n}\n\nfunction detectEvents() {\n  var arr = [\n    \"drag\",\n    \"wheel\",\n    \"select\",\n    \"click\",\n    \"auxclick\",\n    \"mousemove\",\n    \"mousedown\",\n    \"mouseup\",\n    \"keydown\",\n    \"keyup\",\n    \"keypress\",\n    \"cut\",\n    \"copy\",\n    \"paste\",\n    \"scroll\",\n    \"compositionupdate\",\n    \"compositionend\",\n    \"compositionstart\",\n    \"submit\"\n  ];\n\n  for (let i = 0; i < arr.length; i++) {\n    document.addEventListener(arr[i], resetSessionStartAndActive);\n    deleteSessionKey();\n  }\n}\n\nfunction resetSessionStartAndActive() {\n  sessionStart = new Date().getTime() / 1000;\n  sessionActive = sessionStart;\n  console.log(\"refreshed\");\n}\n\nfunction checkActivity() {\n  if (sessionActive - sessionStart >= maxInactive) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction deleteSessionKey() {\n  var chk = checkActivity();\n  if (chk === true) {\n    sessionStorage.removeItem(\"Authorization\");\n    console.log(\"Removed the Authorization-token\");\n    //redirect the page\n  } else {\n    sessionActive = new Date().getTime() / 1000;\n    console.log(sessionActive + \" \" + sessionStart);\n  }\n}\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}