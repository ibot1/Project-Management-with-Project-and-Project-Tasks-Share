{"ast":null,"code":"import _regeneratorRuntime from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\src\\\\components\\\\ProjectBoard\\\\Backlog.js\";\nimport React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport { connect } from \"react-redux\";\nimport { updateProjectTaskCategory, getBacklog } from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nvar Backlog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Backlog, _Component);\n\n  function Backlog() {\n    var _this;\n\n    _classCallCheck(this, Backlog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Backlog).call(this));\n    _this.onDragOver = _this.onDragOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Backlog, [{\n    key: \"onDragOver\",\n    value: function onDragOver(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"onDrop\",\n    value: function () {\n      var _onDrop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, newstatus) {\n        var pt_id, backlog_id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pt_id = e.dataTransfer.getData(\"pt_id\");\n                backlog_id = e.dataTransfer.getData(\"bl_id\");\n                _context.next = 4;\n                return this.props.updateProjectTaskCategory(backlog_id, pt_id, newstatus);\n\n              case 4:\n                this.props.getBacklog(backlog_id);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onDrop(_x, _x2) {\n        return _onDrop.apply(this, arguments);\n      }\n\n      return onDrop;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var project_tasks_prop = this.props.project_tasks_prop;\n      var tasks = project_tasks_prop.map(function (project_task) {\n        return React.createElement(ProjectTask, {\n          key: project_task.id,\n          project_task: project_task,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n      var todoItems = [];\n      var inProgressItems = [];\n      var doneItems = [];\n\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i].props.project_task.status === \"TO_DO\") {\n          todoItems.push(tasks[i]);\n        }\n\n        if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n          inProgressItems.push(tasks[i]);\n        }\n\n        if (tasks[i].props.project_task.status === \"DONE\") {\n          doneItems.push(tasks[i]);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        onDragOver: this.onDragOver,\n        onDrop: function onDrop(e) {\n          return _this2.onDrop(e, \"TO_DO\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-secondary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"TO DO\"))), todoItems), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        onDragOver: this.onDragOver,\n        onDrop: function onDrop(e) {\n          return _this2.onDrop(e, \"IN_PROGRESS\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"In Progress\"))), inProgressItems), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        onDragOver: this.onDragOver,\n        onDrop: function onDrop(e) {\n          return _this2.onDrop(e, \"DONE\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-center mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-success text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Done\"))), doneItems)));\n    }\n  }]);\n\n  return Backlog;\n}(Component);\n\nBacklog.propTypes = {\n  updateProjectTaskCategory: PropTypes.func.isRequired,\n  getBacklog: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  updateProjectTaskCategory: updateProjectTaskCategory,\n  getBacklog: getBacklog\n})(Backlog);","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client1\\src\\components\\ProjectBoard\\Backlog.js"],"names":["React","Component","ProjectTask","connect","updateProjectTaskCategory","getBacklog","PropTypes","Backlog","onDragOver","bind","e","preventDefault","newstatus","pt_id","dataTransfer","getData","backlog_id","props","project_tasks_prop","tasks","map","project_task","id","todoItems","inProgressItems","doneItems","i","length","status","push","onDrop","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport { connect } from \"react-redux\";\nimport {\n  updateProjectTaskCategory,\n  getBacklog\n} from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass Backlog extends Component {\n  constructor() {\n    super();\n    this.onDragOver = this.onDragOver.bind(this);\n  }\n\n  onDragOver(e) {\n    e.preventDefault();\n  }\n\n  async onDrop(e, newstatus) {\n    let pt_id = e.dataTransfer.getData(\"pt_id\");\n    let backlog_id = e.dataTransfer.getData(\"bl_id\");\n    await this.props.updateProjectTaskCategory(backlog_id, pt_id, newstatus);\n    this.props.getBacklog(backlog_id);\n  }\n\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col-md-4\"\n            onDragOver={this.onDragOver}\n            onDrop={e => this.onDrop(e, \"TO_DO\")}\n          >\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div\n            className=\"col-md-4\"\n            onDragOver={this.onDragOver}\n            onDrop={e => this.onDrop(e, \"IN_PROGRESS\")}\n          >\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div\n            className=\"col-md-4\"\n            onDragOver={this.onDragOver}\n            onDrop={e => this.onDrop(e, \"DONE\")}\n          >\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nBacklog.propTypes = {\n  updateProjectTaskCategory: PropTypes.func.isRequired,\n  getBacklog: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { updateProjectTaskCategory, getBacklog }\n)(Backlog);\n"]},"metadata":{},"sourceType":"module"}