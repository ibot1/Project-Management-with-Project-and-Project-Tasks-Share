{"ast":null,"code":"import _defineProperty from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\src\\\\components\\\\ProjectBoard\\\\ProjectTasks\\\\UpdateProjectTask.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { getProjectTask, updateProjectTask } from \"../../../../src/actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nvar UpdateProjectTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateProjectTask, _Component);\n\n  function UpdateProjectTask() {\n    var _this;\n\n    _classCallCheck(this, UpdateProjectTask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateProjectTask).call(this));\n    _this.state = {\n      id: \"\",\n      projectIdentifier: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      created_At: \"\",\n      priority: \"\",\n      status: \"\",\n      dueDate: \"\",\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateProjectTask, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$match$par = this.props.match.params,\n          backlog_id = _this$props$match$par.backlog_id,\n          PTSequence = _this$props$match$par.PTSequence;\n      this.props.getProjectTask(backlog_id, PTSequence, this.props.history);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n\n      var _nextProps$project_ta = nextProps.project_task,\n          id = _nextProps$project_ta.id,\n          projectIdentifier = _nextProps$project_ta.projectIdentifier,\n          projectSequence = _nextProps$project_ta.projectSequence,\n          summary = _nextProps$project_ta.summary,\n          acceptanceCriteria = _nextProps$project_ta.acceptanceCriteria,\n          created_At = _nextProps$project_ta.created_At,\n          priority = _nextProps$project_ta.priority,\n          status = _nextProps$project_ta.status,\n          dueDate = _nextProps$project_ta.dueDate;\n      this.setState({\n        id: id,\n        projectIdentifier: projectIdentifier,\n        projectSequence: projectSequence,\n        summary: summary,\n        acceptanceCriteria: acceptanceCriteria,\n        created_At: created_At,\n        priority: priority,\n        status: status,\n        dueDate: dueDate\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var UpdateProjectTask = {\n        id: this.state.id,\n        projectIdentifier: this.state.projectIdentifier,\n        projectSequence: this.state.projectSequence,\n        summary: this.state.summary,\n        acceptanceCriteria: this.state.acceptanceCriteria,\n        created_At: this.state.created_At,\n        priority: this.state.priority,\n        status: this.state.status,\n        dueDate: this.state.dueDate\n      };\n      this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjectTask, this.props.history);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"add-PBI\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/projectBoard/\".concat(this.state.projectIdentifier),\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Back to Project Board\"), React.createElement(\"h4\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Update Project Task\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Project Name: \", this.state.projectIdentifier, \" | Project Task ID:\", \" \", this.state.projectSequence), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.summary\n        }),\n        name: \"summary\",\n        placeholder: \"Project Task summary\",\n        value: this.state.summary,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), errors.summary && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, errors.summary)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control form-control-lg\",\n        placeholder: \"Acceptance Criteria\",\n        name: \"acceptanceCriteria\",\n        value: this.state.acceptanceCriteria,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Due Date\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-lg\",\n        name: \"dueDate\",\n        value: this.state.dueDate,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control form-control-lg\",\n        name: \"priority\",\n        value: this.state.priority,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Select Priority\"), React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"High\"), React.createElement(\"option\", {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"option\", {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Low\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control form-control-lg\",\n        name: \"status\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Select Status\"), React.createElement(\"option\", {\n        value: \"TO_DO\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"TO DO\"), React.createElement(\"option\", {\n        value: \"IN_PROGRESS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"IN PROGRESS\"), React.createElement(\"option\", {\n        value: \"DONE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"DONE\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return UpdateProjectTask;\n}(Component);\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    project_task: state.backlog.project_task,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProjectTask: getProjectTask,\n  updateProjectTask: updateProjectTask\n})(UpdateProjectTask);","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\components\\ProjectBoard\\ProjectTasks\\UpdateProjectTask.js"],"names":["React","Component","connect","classnames","Link","getProjectTask","updateProjectTask","PropTypes","UpdateProjectTask","state","id","projectIdentifier","projectSequence","summary","acceptanceCriteria","created_At","priority","status","dueDate","errors","onChange","bind","onSubmit","props","match","params","backlog_id","PTSequence","history","nextProps","setState","project_task","e","target","name","value","preventDefault","propTypes","func","isRequired","object","mapStateToProps","backlog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../../src/actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectIdentifier: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      created_At: \"\",\n      priority: \"\",\n      status: \"\",\n      dueDate: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, PTSequence } = this.props.match.params;\n\n    this.props.getProjectTask(backlog_id, PTSequence, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectIdentifier,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      created_At,\n      priority,\n      status,\n      dueDate\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectIdentifier,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      created_At,\n      priority,\n      status,\n      dueDate\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectIdentifier: this.state.projectIdentifier,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      created_At: this.state.created_At,\n      priority: this.state.priority,\n      status: this.state.status,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n"]},"metadata":{},"sourceType":"module"}