{"ast":null,"code":"import _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\src\\\\dragcomponents\\\\backlogdrag.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nvar array_of_objects = tasks;\n\nfunction populate() {\n  var initialData = {\n    tasks: {},\n    columns: {\n      \"column-1\": {\n        id: \"column-1\",\n        title: \"TO_DO\",\n        taskIds: []\n      },\n      \"column-2\": {\n        id: \"column-2\",\n        title: \"IN_PROGRESS\",\n        taskIds: []\n      },\n      \"column-3\": {\n        id: \"column-3\",\n        title: \"DONE\",\n        taskIds: []\n      }\n    }\n  };\n\n  for (var i = 0; i < array_of_objects.length; i++) {\n    var key1 = \"task-\" + (i + 1);\n    initialData[\"tasks\"][key1] = {};\n    initialData[\"tasks\"][key1][\"id\"] = key1;\n    initialData[\"tasks\"][key1][\"content\"] = array_of_objects[i];\n  } //Second Part => Updating Colums [obj1, obj2]\n\n\n  for (var _i = 0; _i < array_of_objects.length; _i++) {\n    if (array_of_objects[_i].props.project_task.status === \"TO_DO\") {\n      initialData[\"columns\"][\"column-1\"][\"taskIds\"].push(array_of_objects[_i]);\n    }\n\n    if (array_of_objects[_i].props.project_task.status === \"IN_PROGRESS\") {\n      initialData[\"columns\"][\"column-2\"][\"taskIds\"].push(array_of_objects[_i]);\n    }\n\n    if (array_of_objects[_i].props.project_task.status === \"DONE\") {\n      initialData[\"columns\"][\"column-3\"][\"taskIds\"].push(array_of_objects[_i]);\n    }\n  }\n}\n\nconsole.log(array_of_objects); //[object1,object2,object3] => Assuming it isn't empty\n//Update the tasks with objects\n//Update the colums with the task-ids\n//First Part => Updating tasks [obj1,obj2]\n\nvar Backlog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Backlog, _Component);\n\n  function Backlog() {\n    _classCallCheck(this, Backlog);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Backlog).apply(this, arguments));\n  }\n\n  _createClass(Backlog, [{\n    key: \"render\",\n    value: function render() {\n      var project_tasks_prop = this.props.project_tasks_prop;\n      console.log();\n      var tasks = [];\n\n      if (typeof project_tasks_prop !== \"string\") {\n        tasks = project_tasks_prop.map(function (project_task) {\n          return React.createElement(ProjectTask, {\n            key: project_task.id,\n            project_task: project_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        });\n      }\n\n      return \"\";\n    }\n  }]);\n\n  return Backlog;\n}(Component);\n\nexport default Backlog;","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\dragcomponents\\backlogdrag.js"],"names":["React","Component","Link","ProjectTask","array_of_objects","tasks","populate","initialData","columns","id","title","taskIds","i","length","key1","props","project_task","status","push","console","log","Backlog","project_tasks_prop","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nvar array_of_objects = tasks;\r\nfunction populate() {\r\n  var initialData = {\r\n    tasks: {},\r\n    columns: {\r\n      \"column-1\": { id: \"column-1\", title: \"TO_DO\", taskIds: [] },\r\n      \"column-2\": { id: \"column-2\", title: \"IN_PROGRESS\", taskIds: [] },\r\n      \"column-3\": { id: \"column-3\", title: \"DONE\", taskIds: [] }\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < array_of_objects.length; i++) {\r\n    var key1 = \"task-\" + (i + 1);\r\n    initialData[\"tasks\"][key1] = {};\r\n    initialData[\"tasks\"][key1][\"id\"] = key1;\r\n    initialData[\"tasks\"][key1][\"content\"] = array_of_objects[i];\r\n  }\r\n\r\n  //Second Part => Updating Colums [obj1, obj2]\r\n  for (let i = 0; i < array_of_objects.length; i++) {\r\n    if (array_of_objects[i].props.project_task.status === \"TO_DO\") {\r\n      initialData[\"columns\"][\"column-1\"][\"taskIds\"].push(array_of_objects[i]);\r\n    }\r\n    if (array_of_objects[i].props.project_task.status === \"IN_PROGRESS\") {\r\n      initialData[\"columns\"][\"column-2\"][\"taskIds\"].push(array_of_objects[i]);\r\n    }\r\n    if (array_of_objects[i].props.project_task.status === \"DONE\") {\r\n      initialData[\"columns\"][\"column-3\"][\"taskIds\"].push(array_of_objects[i]);\r\n    }\r\n  }\r\n}\r\n\r\nconsole.log(array_of_objects);\r\n\r\n//[object1,object2,object3] => Assuming it isn't empty\r\n//Update the tasks with objects\r\n//Update the colums with the task-ids\r\n\r\n//First Part => Updating tasks [obj1,obj2]\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    console.log();\r\n\r\n    var tasks = [];\r\n\r\n    if (typeof project_tasks_prop !== \"string\") {\r\n      tasks = project_tasks_prop.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n      ));\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n"]},"metadata":{},"sourceType":"module"}