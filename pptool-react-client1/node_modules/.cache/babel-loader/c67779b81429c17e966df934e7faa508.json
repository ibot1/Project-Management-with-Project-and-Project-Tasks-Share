{"ast":null,"code":"import _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\src\\\\dragcomponents\\\\backlogdrag.js\";\nimport React, { Component } from \"react\";\nimport ProjectTask from \"../components/ProjectBoard/ProjectTasks/ProjectTask\";\n\nvar Backlogdrag =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Backlogdrag, _Component);\n\n  function Backlogdrag() {\n    _classCallCheck(this, Backlogdrag);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Backlogdrag).apply(this, arguments));\n  }\n\n  _createClass(Backlogdrag, [{\n    key: \"solve\",\n    value: function solve() {\n      var project_tasks_prop = this.props.project_tasks_prop;\n      var tasks = [];\n\n      if (typeof project_tasks_prop !== \"string\") {\n        tasks = project_tasks_prop.map(function (project_task) {\n          return React.createElement(ProjectTask, {\n            key: project_task.id,\n            project_task: project_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12\n            },\n            __self: this\n          });\n        });\n      }\n\n      return tasks;\n    }\n    /*\r\n    render() {\r\n      const { project_tasks_prop } = this.props;\r\n        //var tasks = [];\r\n        if (typeof project_tasks_prop !== \"string\") {\r\n        tasks = project_tasks_prop.map(project_task => (\r\n          <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n      }\r\n        return tasks;\r\n      \r\n    }*/\n\n  }]);\n\n  return Backlogdrag;\n}(Component);\n\nvar tasks = Backlogdrag.solve();\n/*\r\n  <div className=\"card mb-1 bg-light\">\r\n              <div className=\"card-header text-primary\">\r\n                ID: projectSequence -- Priority: priorityString\r\n              </div>\r\n              <div className=\"card-body bg-light\">\r\n                <h5 className=\"card-title\">project_task.summary</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                  project_task.acceptanceCriteria\r\n                </p>\r\n                <Link to=\"\" className=\"btn btn-primary\">\r\n                  View / Update\r\n                </Link>\r\n\r\n                <button className=\"btn btn-danger ml-4\">Delete</button>\r\n              </div>\r\n            </div>\r\n  */\n\nexport default tasks;","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\dragcomponents\\backlogdrag.js"],"names":["React","Component","ProjectTask","Backlogdrag","project_tasks_prop","props","tasks","map","project_task","id","solve"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;IAEMC,W;;;;;;;;;;;;;4BACI;AAAA,UACEC,kBADF,GACyB,KAAKC,KAD9B,CACED,kBADF;AAGN,UAAIE,KAAK,GAAG,EAAZ;;AAEA,UAAI,OAAOF,kBAAP,KAA8B,QAAlC,EAA4C;AAC1CE,QAAAA,KAAK,GAAGF,kBAAkB,CAACG,GAAnB,CAAuB,UAAAC,YAAY;AAAA,iBACzC,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAEA,YAAY,CAACC,EAA/B;AAAmC,YAAA,YAAY,EAAED,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADyC;AAAA,SAAnC,CAAR;AAGD;;AACD,aAAOF,KAAP;AACD;AACD;;;;;;;;;;;;;;;;EAbwBL,S;;AA6B1B,IAAIK,KAAK,GAAGH,WAAW,CAACO,KAAZ,EAAZ;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,eAAeJ,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ProjectTask from \"../components/ProjectBoard/ProjectTasks/ProjectTask\";\r\n\r\nclass Backlogdrag extends Component {\r\n  solve() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    var tasks = [];\r\n\r\n    if (typeof project_tasks_prop !== \"string\") {\r\n      tasks = project_tasks_prop.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n      ));\r\n    }\r\n    return tasks;\r\n  }\r\n  /*\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    //var tasks = [];\r\n\r\n    if (typeof project_tasks_prop !== \"string\") {\r\n      tasks = project_tasks_prop.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n      ));\r\n    }\r\n\r\n    return tasks;\r\n    \r\n  }*/\r\n}\r\nvar tasks = Backlogdrag.solve();\r\n\r\n/*\r\n  <div className=\"card mb-1 bg-light\">\r\n              <div className=\"card-header text-primary\">\r\n                ID: projectSequence -- Priority: priorityString\r\n              </div>\r\n              <div className=\"card-body bg-light\">\r\n                <h5 className=\"card-title\">project_task.summary</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                  project_task.acceptanceCriteria\r\n                </p>\r\n                <Link to=\"\" className=\"btn btn-primary\">\r\n                  View / Update\r\n                </Link>\r\n\r\n                <button className=\"btn btn-danger ml-4\">Delete</button>\r\n              </div>\r\n            </div>\r\n  */\r\n\r\nexport default tasks;\r\n"]},"metadata":{},"sourceType":"module"}