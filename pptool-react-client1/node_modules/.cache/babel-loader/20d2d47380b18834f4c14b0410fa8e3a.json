{"ast":null,"code":"import _objectSpread from \"S:\\\\Spring Boot\\\\pptool-react-client1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\nvar intitialState = {\n  project_tasks: [],\n  project_taks: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_BACKLOG:\n      return _objectSpread({}, state, {\n        project_tasks: action.payload\n      });\n\n    case GET_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_task: action.payload\n      });\n\n    case DELETE_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_tasks: state.project_tasks.filter(function (project_task) {\n          return project_task.projectSequence !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client1\\src\\reducers\\backlogReducer.js"],"names":["GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","intitialState","project_tasks","project_taks","state","action","type","payload","project_task","filter","projectSequence"],"mappings":";AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAMA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,aAAa,EAAE,EADK;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAtB;AAKA,eAAe,YAAwC;AAAA,MAA/BC,KAA+B,uEAAvBH,aAAuB;AAAA,MAARI,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFxB;;AAKF,SAAKR,gBAAL;AACE,+BACKK,KADL;AAEEI,QAAAA,YAAY,EAAEH,MAAM,CAACE;AAFvB;;AAKF,SAAKP,mBAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBO,MAApB,CACb,UAAAD,YAAY;AAAA,iBAAIA,YAAY,CAACE,eAAb,KAAiCL,MAAM,CAACE,OAA5C;AAAA,SADC;AAFjB;;AAOF;AACE,aAAOH,KAAP;AAtBJ;AAwBD","sourcesContent":["import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst intitialState = {\n  project_tasks: [],\n  project_taks: {}\n};\n\nexport default function(state = intitialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}