{"ast":null,"code":"import _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client_\\\\pptool-react-client\\\\src\\\\components\\\\ProjectBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./ProjectBoard/Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../actions/backlogActions\";\n\nvar ProjectBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectBoard, _Component);\n\n  function ProjectBoard() {\n    var _this;\n\n    _classCallCheck(this, ProjectBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectBoard).call(this));\n    _this.state = {\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(ProjectBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.getBacklog(id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var id = this.props.match.params.id;\n      var project_tasks = this.props.backlog.project_tasks;\n      var errors = this.state.errors;\n      var BoardContent;\n\n      var boardAlgorithm = function boardAlgorithm(errors, project_tasks) {\n        if (project_tasks.length < 1) {\n          if (errors.projectNotFound) {\n            return React.createElement(\"div\", {\n              className: \"alert alert-danger text-center\",\n              role: \"alert\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, errors.projectNotFound);\n          } else {\n            React.createElement(\"div\", {\n              className: \"alert alert-info text-center\",\n              role: \"alert\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, \"No Project Tasks on this board\");\n          }\n        } else {}\n      };\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/addProjectTask/\".concat(id),\n        className: \"btn btn-primary mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Create Project Task\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Backlog, {\n        project_tasks_prop: project_tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectBoard;\n}(Component);\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    backlog: state.backlog,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getBacklog: getBacklog\n})(ProjectBoard);","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client_\\pptool-react-client\\src\\components\\ProjectBoard.js"],"names":["React","Component","Link","Backlog","connect","PropTypes","getBacklog","ProjectBoard","state","errors","id","props","match","params","nextProps","setState","project_tasks","backlog","BoardContent","boardAlgorithm","length","projectNotFound","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./ProjectBoard/Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No Project Tasks on this board\r\n          </div>;\r\n        }\r\n      } else {\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        <Backlog project_tasks_prop={project_tasks} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n"]},"metadata":{},"sourceType":"module"}