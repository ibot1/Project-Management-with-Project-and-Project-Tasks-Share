{"ast":null,"code":"import _defineProperty from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\PPMToolFullStack - Home\\\\pptool-react-client\\\\src\\\\components\\\\Project\\\\UpdateProject.js\";\nimport React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nvar UpdateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateProject, _Component);\n\n  function UpdateProject() {\n    var _this;\n\n    _classCallCheck(this, UpdateProject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateProject).call(this));\n    _this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateProject, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n\n      var _nextProps$project = nextProps.project,\n          id = _nextProps$project.id,\n          projectName = _nextProps$project.projectName,\n          projectIdentifier = _nextProps$project.projectIdentifier,\n          description = _nextProps$project.description,\n          start_date = _nextProps$project.start_date,\n          end_date = _nextProps$project.end_date;\n      this.setState({\n        id: id,\n        projectName: projectName,\n        projectIdentifier: projectIdentifier,\n        description: description,\n        start_date: start_date,\n        end_date: end_date\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.getProject(id, this.props.history);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var updateProject = {\n        id: this.state.id,\n        projectName: this.state.projectName,\n        projectIdentifier: this.state.projectIdentifier,\n        description: this.state.description,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date\n      };\n      this.props.createProject(updateProject, this.props.history);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Update Project form\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg \", {\n          \"is-invalid\": errors.projectName\n        }),\n        placeholder: \"Project Name\",\n        name: \"projectName\",\n        value: this.state.projectName,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), errors.projectName && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" \", errors.projectName, \" \")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        placeholder: \"Unique Project ID\",\n        name: \"projectIdentifier\",\n        value: this.state.projectIdentifier,\n        onChange: this.onChange,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control form-control-lg\",\n        placeholder: \"Project Description\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), errors.description && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" \", errors.description, \" \")), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-lg\",\n        name: \"start_date\",\n        value: this.state.start_date,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Estimated End Date\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control form-control-lg\",\n        name: \"end_date\",\n        value: this.state.end_date,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return UpdateProject;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    project: state.project.project,\n    errors: state.errors\n  };\n};\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getProject: getProject,\n  createProject: createProject\n})(UpdateProject);","map":{"version":3,"sources":["S:\\Spring Boot\\PPMToolFullStack - Home\\pptool-react-client\\src\\components\\Project\\UpdateProject.js"],"names":["React","Component","getProject","createProject","PropTypes","connect","classnames","UpdateProject","state","id","projectName","projectIdentifier","description","start_date","end_date","errors","onChange","bind","onSubmit","nextProps","setState","project","props","match","params","history","e","target","name","value","preventDefault","updateProject","mapStateToProps","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {\" \"}\r\n                      {errors.projectName}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {\" \"}\r\n                      {errors.description}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n"]},"metadata":{},"sourceType":"module"}