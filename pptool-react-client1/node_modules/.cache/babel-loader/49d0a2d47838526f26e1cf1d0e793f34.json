{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlogdrag from \"./backlogdrag\";\nvar array_of_objects = Backlogdrag;\nconsole.log(array_of_objects); //[object1,object2,object3] => Assuming it isn't empty\n//Update the tasks with objects\n//Update the colums with the task-ids\n//First Part => Updating tasks [obj1,obj2]\n\nvar initialData = {\n  tasks: {},\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"TO_DO\",\n      taskIds: []\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"IN_PROGRESS\",\n      taskIds: []\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"DONE\",\n      taskIds: []\n    }\n  }\n};\n\nfor (var i = 0; i < array_of_objects.length; i++) {\n  var key1 = \"task-\" + (i + 1);\n  initialData[\"tasks\"][key1] = {};\n  initialData[\"tasks\"][key1][\"id\"] = key1;\n  initialData[\"tasks\"][key1][\"content\"] = array_of_objects[i];\n} //Second Part => Updating Colums [obj1, obj2]\n\n\nfor (var _i = 0; _i < array_of_objects.length; _i++) {\n  if (array_of_objects[_i].props.project_task.status === \"TO_DO\") {\n    initialData[\"columns\"][\"column-1\"][\"taskIds\"].push(array_of_objects[_i]);\n  }\n\n  if (array_of_objects[_i].props.project_task.status === \"IN_PROGRESS\") {\n    initialData[\"columns\"][\"column-2\"][\"taskIds\"].push(array_of_objects[_i]);\n  }\n\n  if (array_of_objects[_i].props.project_task.status === \"DONE\") {\n    initialData[\"columns\"][\"column-3\"][\"taskIds\"].push(array_of_objects[_i]);\n  }\n}\n\nexport default initialData;","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\dragcomponents\\initial-data.js"],"names":["React","Component","Link","Backlogdrag","array_of_objects","console","log","initialData","tasks","columns","id","title","taskIds","i","length","key1","props","project_task","status","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAIC,gBAAgB,GAAGD,WAAvB;AAEAE,OAAO,CAACC,GAAR,CAAYF,gBAAZ,E,CAEA;AACA;AACA;AAEA;;AACA,IAAIG,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,OAAO,EAAE;AACP,gBAAY;AAAEC,MAAAA,EAAE,EAAE,UAAN;AAAkBC,MAAAA,KAAK,EAAE,OAAzB;AAAkCC,MAAAA,OAAO,EAAE;AAA3C,KADL;AAEP,gBAAY;AAAEF,MAAAA,EAAE,EAAE,UAAN;AAAkBC,MAAAA,KAAK,EAAE,aAAzB;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KAFL;AAGP,gBAAY;AAAEF,MAAAA,EAAE,EAAE,UAAN;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,OAAO,EAAE;AAA1C;AAHL;AAFO,CAAlB;;AASA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,gBAAgB,CAACU,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,MAAIE,IAAI,GAAG,WAAWF,CAAC,GAAG,CAAf,CAAX;AACAN,EAAAA,WAAW,CAAC,OAAD,CAAX,CAAqBQ,IAArB,IAA6B,EAA7B;AACAR,EAAAA,WAAW,CAAC,OAAD,CAAX,CAAqBQ,IAArB,EAA2B,IAA3B,IAAmCA,IAAnC;AACAR,EAAAA,WAAW,CAAC,OAAD,CAAX,CAAqBQ,IAArB,EAA2B,SAA3B,IAAwCX,gBAAgB,CAACS,CAAD,CAAxD;AACD,C,CAED;;;AACA,KAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGT,gBAAgB,CAACU,MAArC,EAA6CD,EAAC,EAA9C,EAAkD;AAChD,MAAIT,gBAAgB,CAACS,EAAD,CAAhB,CAAoBG,KAApB,CAA0BC,YAA1B,CAAuCC,MAAvC,KAAkD,OAAtD,EAA+D;AAC7DX,IAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,UAAvB,EAAmC,SAAnC,EAA8CY,IAA9C,CAAmDf,gBAAgB,CAACS,EAAD,CAAnE;AACD;;AACD,MAAIT,gBAAgB,CAACS,EAAD,CAAhB,CAAoBG,KAApB,CAA0BC,YAA1B,CAAuCC,MAAvC,KAAkD,aAAtD,EAAqE;AACnEX,IAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,UAAvB,EAAmC,SAAnC,EAA8CY,IAA9C,CAAmDf,gBAAgB,CAACS,EAAD,CAAnE;AACD;;AACD,MAAIT,gBAAgB,CAACS,EAAD,CAAhB,CAAoBG,KAApB,CAA0BC,YAA1B,CAAuCC,MAAvC,KAAkD,MAAtD,EAA8D;AAC5DX,IAAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,UAAvB,EAAmC,SAAnC,EAA8CY,IAA9C,CAAmDf,gBAAgB,CAACS,EAAD,CAAnE;AACD;AACF;;AAED,eAAeN,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlogdrag from \"./backlogdrag\";\n\nvar array_of_objects = Backlogdrag;\n\nconsole.log(array_of_objects);\n\n//[object1,object2,object3] => Assuming it isn't empty\n//Update the tasks with objects\n//Update the colums with the task-ids\n\n//First Part => Updating tasks [obj1,obj2]\nvar initialData = {\n  tasks: {},\n  columns: {\n    \"column-1\": { id: \"column-1\", title: \"TO_DO\", taskIds: [] },\n    \"column-2\": { id: \"column-2\", title: \"IN_PROGRESS\", taskIds: [] },\n    \"column-3\": { id: \"column-3\", title: \"DONE\", taskIds: [] }\n  }\n};\n\nfor (let i = 0; i < array_of_objects.length; i++) {\n  var key1 = \"task-\" + (i + 1);\n  initialData[\"tasks\"][key1] = {};\n  initialData[\"tasks\"][key1][\"id\"] = key1;\n  initialData[\"tasks\"][key1][\"content\"] = array_of_objects[i];\n}\n\n//Second Part => Updating Colums [obj1, obj2]\nfor (let i = 0; i < array_of_objects.length; i++) {\n  if (array_of_objects[i].props.project_task.status === \"TO_DO\") {\n    initialData[\"columns\"][\"column-1\"][\"taskIds\"].push(array_of_objects[i]);\n  }\n  if (array_of_objects[i].props.project_task.status === \"IN_PROGRESS\") {\n    initialData[\"columns\"][\"column-2\"][\"taskIds\"].push(array_of_objects[i]);\n  }\n  if (array_of_objects[i].props.project_task.status === \"DONE\") {\n    initialData[\"columns\"][\"column-3\"][\"taskIds\"].push(array_of_objects[i]);\n  }\n}\n\nexport default initialData;\n"]},"metadata":{},"sourceType":"module"}