{"ast":null,"code":"import _classCallCheck from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"S:\\\\Spring Boot\\\\pptool-react-client - Copy\\\\src\\\\components\\\\ProjectBoard\\\\ProjectTasks\\\\ProjectTask.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nvar ProjectTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectTask, _Component);\n\n  function ProjectTask() {\n    _classCallCheck(this, ProjectTask);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectTask).apply(this, arguments));\n  }\n\n  _createClass(ProjectTask, [{\n    key: \"onDeleteClick\",\n    value: function onDeleteClick(backlog_id, pt_id) {\n      this.props.deleteProjectTask(backlog_id, pt_id);\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(e, pt) {\n      e.dataTransfer.setData(\"pt_id\", pt.projectSequence);\n      e.dataTransfer.setData(\"bl_id\", pt.projectIdentifier);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var project_task = this.props.project_task;\n      var priorityString;\n      var priorityClass;\n\n      if (project_task.priority === 3) {\n        priorityClass = \"bg-info text-light\";\n        priorityString = \"LOW\";\n      }\n\n      if (project_task.priority === 2) {\n        priorityClass = \"bg-warning text-light\";\n        priorityString = \"MEDIUM\";\n      }\n\n      if (project_task.priority === 1) {\n        priorityClass = \"bg-danger text-light\";\n        priorityString = \"HIGH\";\n      }\n\n      return React.createElement(\"div\", {\n        draggable: true,\n        onDragStart: function onDragStart(e) {\n          return _this.onDragStart(e, project_task);\n        },\n        className: \"card mb-1 bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header text-primary \".concat(priorityClass),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"ID: \", project_task.projectSequence, \" -- Priority: \", priorityString), React.createElement(\"div\", {\n        className: \"card-body bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, project_task.summary), React.createElement(\"p\", {\n        className: \"card-text text-truncate \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, project_task.acceptanceCriteria), React.createElement(\"p\", {\n        className: \"card-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Due Date: \", project_task.dueDate), React.createElement(Link, {\n        to: \"/updateProjectTask/\".concat(project_task.projectIdentifier, \"/\").concat(project_task.projectSequence),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"View / Update\"), React.createElement(\"button\", {\n        className: \"btn btn-danger ml-4\",\n        onClick: this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return ProjectTask;\n}(Component);\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteProjectTask: deleteProjectTask\n})(ProjectTask);","map":{"version":3,"sources":["S:\\Spring Boot\\pptool-react-client - Copy\\src\\components\\ProjectBoard\\ProjectTasks\\ProjectTask.js"],"names":["React","Component","Link","deleteProjectTask","PropTypes","connect","ProjectTask","backlog_id","pt_id","props","e","pt","dataTransfer","setData","projectSequence","projectIdentifier","project_task","priorityString","priorityClass","priority","onDragStart","summary","acceptanceCriteria","dueDate","onDeleteClick","bind","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  onDragStart(e, pt) {\n    e.dataTransfer.setData(\"pt_id\", pt.projectSequence);\n    e.dataTransfer.setData(\"bl_id\", pt.projectIdentifier);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    return (\n      <div\n        draggable\n        onDragStart={e => this.onDragStart(e, project_task)}\n        className=\"card mb-1 bg-light\"\n      >\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <p className=\"card-text text-muted\">\n            Due Date: {project_task.dueDate}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n"]},"metadata":{},"sourceType":"module"}